name: monitoring

on:
 # schedule:
   # - cron: '30 * * * *'
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.10"  # Updated to match project requirements
  POETRY_VERSION: 1.8.5
  POETRY_URL: https://install.python-poetry.org

jobs:
  monitoring:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Cache Poetry cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry
        key: poetry-cache-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ env.POETRY_VERSION }}

    - name: Cache Packages
      uses: actions/cache@v3
      with:
        path: ~/.local
        key: poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/*.yml') }}

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Poetry
      run: |
        curl -sSL ${{ env.POETRY_URL }} | python - --version ${{ env.POETRY_VERSION }}
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install Dependencies
      run: poetry install

    - name: Verify Jupyter and nbconvert
      run: |
        poetry run pip show jupyter nbconvert || poetry add --dev jupyter nbconvert
        poetry run jupyter --version
        poetry run jupyter nbconvert --version

    - name: Run monitoring with Debugging
      env: 
        HOPSWORKS_PROJECT_NAME: ${{ secrets.HOPSWORKS_PROJECT_NAME }}
        HOPSWORKS_API_KEY: ${{ secrets.HOPSWORKS_API_KEY }}
        COMET_ML_API_KEY: ${{ secrets.COMET_ML_API_KEY }}
        COMET_ML_WORKSPACE: ${{ secrets.COMET_ML_WORKSPACE }}
        COMET_ML_PROJECT_NAME: ${{ secrets.COMET_ML_PROJECT_NAME }}
      run: |
        echo "Executing notebook..."
        poetry run jupyter nbconvert --to notebook --execute nootbooks/8-monitoring.ipynb


  
        